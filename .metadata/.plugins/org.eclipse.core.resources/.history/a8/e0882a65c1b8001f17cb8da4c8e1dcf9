/*
 * switch_channel.c
 *
 *  Created on: Dec 12, 2024
 *      Author: utente
 */

// Configura un canale ADC specifico per la lettura
HAL_StatusTypeDef channel_config(ADC_HandleTypeDef *hadc, uint32_t channel);

// Commutazione del canale ADC e lettura del dato risultante
HAL_StatusTypeDef switch_channel_and_read(ADC_HandleTypeDef *hadc, uint32_t channel, uint16_t *d_out);

#include "switch_channel.h"

HAL_StatusTypeDef channel_config(ADC_HandleTypeDef *hadc, uint32_t channel, uint32_t sampling_time, int singleConvMode) {

	ADC_ChannelConfTypeDef sConfig = {0};


    sConfig.Channel = channel;
    sConfig.Rank = 1;
    sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;

    if (HAL_ADC_ConfigChannel(hadc, &sConfig) != HAL_OK) {
        Error_Handler();
        return HAL_ERROR;
    }

    return HAL_OK;
}


// cambia canale e legge il valore ADC
HAL_StatusTypeDef switch_channel_and_read(uint16_t *d_out, ADC_HandleTypeDef *hadc, uint32_t channel, uint32_t sampling_time, int singleConvMode) {

	HAL_ADC_Stop(&hadc1);

	if( channel_config(hadc, channel, sampling_time, singleConvMode) != HAL_OK){
		return HAL_ERROR;
	}

	HAL_ADC_Start(&hadc1);


    if( HAL_ADC_PollForConversion(hadc, HAL_MAX_DELAY) == HAL_OK ){
    	*d_out = HAL_ADC_GetValue(hadc); // ritorna il valore letto

    	if(singleConvMode)
    		HAL_ADC_Stop(hadc);

    	return HAL_OK;
    }else{
    	HAL_ADC_Stop(hadc);
    	return HAL_ERROR;
    }

}

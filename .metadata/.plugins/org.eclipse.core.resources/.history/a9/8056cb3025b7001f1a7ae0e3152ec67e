/*
 * ECG_module.h
 *
 *  Created on: Dec 10, 2024
 *      Author: utente
 */

#ifndef INC_ECG_MODULE_H_
#define INC_ECG_MODULE_H_

#include "adc.h"

#define MAX_ARRAY_DIM	100
#define TRESHOLDPEAKS	0.75

typedef struct {
    uint16_t* buffer;
    float sum;
    uint16_t index;
    uint16_t length;
} FilterECGParam;

typedef struct {
    uint16_t* buffer;
    uint16_t count;
    uint16_t length;
    //array per la posizione dei picchi
    //numero di picchi;
    uint8_t HeartRate;
} ECGParam;

void ECG_init(FilterECGParam* FilterECGparam, ECGParam* ECGparam, uint16_t* buffer1, uint16_t* buffer2, uint16_t length1, uint16_t length2);
void filter_signal(FilterECGParam* FilterECGparam, ECGParam* ECGparam, uint16_t d_out);
//con filter_signal prendo il valore filtrato e lo metto nell'array di ECGParam
//quando l'array di ECGParam Ã¨ pieno, allora devo elaborare
//trovo il massimo, il minimo e trovo la soglia come fa il prof

//trovo i picchi e conservo gli indici
//if ((buffer[i] > th) && (buffer[i] > buffer[i - 1]) && (buffer[i] > buffer[i + 1]))
 //    {
 //        peaks[count] = i; // Store the index of the peak

//uint16_t max_value = find_max(buffer, length);
//uint16_t min_value = find_min(buffer, length);
//uint16_t th = (uint16_t)(TRESHOLDPEAKS * (max_value-min_value)) + min_value; // Threshold value

//calcola il bpm come la media degli intervalli


#endif /* INC_ECG_MODULE_H_ */
